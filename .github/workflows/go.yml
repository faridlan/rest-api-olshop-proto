name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # USERNAME: ${{secrets.USERNAME}}
  # PASSWORD: ${{secrets.PASSWORD}}
  # HOST: ${{secrets.HOST}}
  # PORT: ${{secrets.PORT}}
  # DB: ${{secrets.DB}}
  # SPACES_KEY: ${{secrets.SPACES_KEY}}
  # SPACES_SECRET: ${{secrets.SPACES_SECRET}}
  IMAGE: nulhakim/olshop-proto:1.0.2
  IMAGE_NAME: olshop

jobs:

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Set up Go
  #     uses: actions/setup-go@v3
  #     with:
  #       go-version: 1.17

  #   - name: Build
  #     run: go build -v ./...

  #   - name: Test
  #     run: go test -v ./...
  #   - name: Login to DockerHub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #   - name: Build and push
  #     uses: docker/build-push-action@v3
  #     with:
  #       push: true
  #       tags: nulhakim/olshop-proto:1.0.2

  deploy_do:
    runs-on: ubuntu-latest
    # needs: build

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          password: ${{ secrets.PASSPHRASE }}
          envs: IMAGE,IMAGE_NAME,SPACES_KEY,SPACES_SECRET,USERNAME,PASSWORD,PORT,HOST,DB,${{ secrets.DOCKERHUB_USERNAME }},${{ secrets.DOCKERHUB_TOKEN }}
          script: |
            docker images
            docker image rm $(echo $IMAGE)
            docker container rm olshop
            docker container ls -a
            docker container ps
            docker run -d 
            --restart always 
            --name $(echo $IMAGE_NAME) 
            -e SPACES_KEY=$(echo $SPACES_KEY) -e SPACES_SECRET=$(echo $SPACES_SECRET)
            -e USERNAME=$(echo $USERNAME) -e PASSWORD=$(echo $PASSWORD) -e PORT=$(echo $PORT) -e HOST=$(echo $HOST) -e DB=$(echo $DB)
            -p 3000:3000 $(echo $IMAGE)
            docker container ls -a
            docker container ps